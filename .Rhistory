ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="Pastel1") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="YlGnBu") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(myDiamonds) +
geom_bar(aes(cut, fill = cut)) +
scale_fill_brewer(palette = "RdYlGn") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
coord_flip()
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="YlGnBu") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Gcarat)
ggplot(myDiamonds) +
geom_bar(aes(cut, fill = cut)) +
scale_fill_brewer(palette = "RdYlGn") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
coord_flip() +
facet_wrap(~Gcarat)
View(myDiamonds)
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
labs(subtitle = "Grouped by Gcarat")
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~Gcarat)
?diamonds
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(caption = "Data source: ggplot2 diamonds dataset")
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(caption = "Data source: ggplot2 diamonds dataset") +
facet_wrap(~Gcarat)
ggplot(myDiamonds) +
geom_bar(aes(cut, fill = cut)) +
scale_fill_brewer(palette = "RdYlGn") +
labs(caption = "Data source: ggplot2 diamonds dataset") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(myDiamonds) +
geom_bar(aes(cut, fill = cut)) +
scale_fill_brewer(palette = "RdYlGn") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
labs(caption = "Data source: ggplot2 diamonds dataset") +
coord_flip()
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
labs(caption = "Data source: ggplot2 diamonds dataset") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(caption = "Data source: ggplot2 diamonds dataset") +
facet_wrap(~Gcarat)
data = read.table("/Users/brianlambert/Desktop/STA363/musclemass.txt", header = T)
attach(data)
summary(data)
slrfit(data)
slrfit = lm(mass ~ age)
summary(slrfit)
confint(slrfit)
predict1 = predict(slrfit, newdata = data.frame(age = 65), int = "conf")
predict1
predict2 = predict(slrfit, newdata = data.frame(age = 65, int = "pred"))
attach(data)
attach(data)
data = read.table("/Users/brianlambert/Desktop/STA363/musclemass.txt", header = T)
attach(data)
data = read.table("/Users/brianlambert/Desktop/STA363/musclemass.txt", header = T)
attach(data())
attach(data())
data = read.table("/Users/brianlambert/Desktop/STA363/musclemass.txt", header = T)
attach(data)
data = read.table("/Users/brianlambert/Desktop/STA363/musclemass.txt", header = T)
attach(data)
age.sort = sort(unique(age))
age.sort
p65 = predict(slrfit, newdata = data.frame(age = age.sort), int = "pred")
slrfit = lm(mass ~ age)
p65 = predict(slrfit, newdata = data.frame(age = age.sort), int = "pred")
cbind(age.sort, p65)
library(tidyverse)
myDiamonds <- diamonds %>%
mutate(Gcarat = cut(carat, breaks=seq(from=0,to=3.5,by=.25)))
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
labs(caption = "Data source: ggplot2 diamonds dataset") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(caption = "Data source: ggplot2 diamonds dataset") +
facet_wrap(~Gcarat)
ggplot(myDiamonds) +
geom_bar(aes(cut, fill = cut)) +
scale_fill_brewer(palette = "RdYlGn") +
labs(caption = "Data source: ggplot2 diamonds dataset") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(myDiamonds) +
geom_bar(aes(cut, fill = cut)) +
scale_fill_brewer(palette = "RdYlGn") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
labs(caption = "Data source: ggplot2 diamonds dataset") +
coord_flip()
library(tidyverse)
table(myDiamonds$cut)
myDiamonds <- diamonds %>%
mutate(Gcarat = cut(carat, breaks=seq(from=0,to=3.5,by=.25)))
table(myDiamonds$cut)
table(myDiamonds$cut)/sum(table(myDiamonds$cut))
ggplot(myDiamonds, aes(x=factor(1), fill=cut))+
geom_bar(width = 1) +
annotate(geom="text",x=1,y=21551/2,label="40%/premium") +
annotate(geom="text",x=1,y=21551 + 13791/2,label="26%") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082/2,label=".22") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082 + 4906/2,label=".09") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082 + 4906 + 1610/2,label=".03") +
coord_polar("y") +
theme_minimal() +
theme(axis.text=element_blank(),
axis.title = element_blank())
ggplot(myDiamonds, aes(x=factor(1), fill=cut))+
geom_bar(width = 1) +
annotate(geom="text",x=1,y=21551/2,label="40%/npremium") +
annotate(geom="text",x=1,y=21551 + 13791/2,label="26%") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082/2,label=".22") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082 + 4906/2,label=".09") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082 + 4906 + 1610/2,label=".03") +
coord_polar("y") +
theme_minimal() +
theme(axis.text=element_blank(),
axis.title = element_blank())
ggplot(myDiamonds, aes(x=factor(1), fill=cut))+
geom_bar(width = 1) +
annotate(geom="text",x=1,y=21551/2,label="40%\npremium") +
annotate(geom="text",x=1,y=21551 + 13791/2,label="26%") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082/2,label=".22") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082 + 4906/2,label=".09") +
annotate(geom="text",x=1,y=21551 + 13791 + 12082 + 4906 + 1610/2,label=".03") +
coord_polar("y") +
theme_minimal() +
theme(axis.text=element_blank(),
axis.title = element_blank())
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
library(gridExtra)
library(tidyverse)
library(gapminder)
myGapData <- gapminder %>%
mutate(TotalGDP = pop*gdpPercap) %>%
mutate(order_continent = factor(continent,
levels=c("Oceania", "Africa", "Europe", "Americas", "Asia")))
GDPsummaryDF <- myGapData %>%
group_by(continent, year) %>%
summarise(ContinentTotalGDP = sum(TotalGDP), ncountries = n())
GDPyearDF <- myGapData %>%
group_by(year) %>%
summarise(YearTotalGDP = sum(TotalGDP))
GDPcombo <- left_join(GDPsummaryDF, GDPyearDF, by="year")
GDPcombo <- GDPcombo %>% mutate(PropWorldGDP = ContinentTotalGDP / YearTotalGDP,
PctWorldGDP = 100*PropWorldGDP,
ContGDPBillions = ContinentTotalGDP/1000000000)
GDPcombo <- GDPcombo %>%
mutate(order_continent = factor(continent,
levels=c("Oceania", "Africa", "Europe", "Americas", "Asia")))
g1_trace <- ggplot(myGapData, aes(x=pop,y=TotalGDP,color=order_continent)) +
geom_line(aes(group=country)) +
theme_minimal() +
labs(x ="Population",
y="GDP")
g1_trace
g2_scatter <- ggplot(myGapData, aes(x=pop,y=TotalGDP,color=order_continent)) +
geom_point() +
facet_wrap(~year) +
scale_x_log10(name="Population Size (Millions)",
breaks=1000000*c(1,10,100),
labels=c("1","10","100")) +
scale_y_log10(name="Gross Domestic Product (Billions)",
breaks=1000000000*c(1,100,1000),
labels=c("1000","10000","100000")) +
theme_minimal()
g3_stackbar <- ggplot(GDPcombo, aes(x=year,y=ContinentTotalGDP,
fill=order_continent)) +
geom_bar(stat="identity") +
theme(legend.position = "top") +
theme_minimal()
g4_dot <- myGapData %>%
filter(continent=="Asia") %>%
filter(year==2007) %>%
ggplot(aes(TotalGDP, fct_reorder(country,TotalGDP))) +
geom_point() +
theme(text = element_text(6),
axis.text.y = element_text(6)) +
scale_y_discrete(name=element_blank()) +
scale_x_continuous(name="Total GDP ($Trillion))",
breaks=1000000000000*c(5,10,15,20),
labels = c("5","10","15","20"))+
labs(title="Total GDP in each continent in 2007 in Asia",
caption="Data source: Jennifer Bryan (2015) Gapminder package") +
theme_minimal() +
theme(axis.text.y=element_text(size=9))
g5_stackarea <- ggplot(GDPcombo, aes(x=year, y=ContinentTotalGDP, fill=order_continent)) +
geom_area() +
theme_minimal()
grid.arrange(g1_trace, g2_scatter, g3_stackbar, g4_dot, g5_stackarea)
library("forcats", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
grid.arrange(g1_trace, g2_scatter, g3_stackbar, g4_dot, g5_stackarea)
grid.arrange(g2_scatter, g3_stackbar, g4_dot, g5_stackarea)
grid.arrange(g1_trace, g2_scatter, g3_stackbar, g4_dot, g5_stackarea,
widths=c(1,2))
grid.arrange(g1_trace, g2_scatter, g3_stackbar, g4_dot, g5_stackarea,
widths=c(1,2),heights=c(1,2,2))
library(grid)
pushViewport(viewport(layout=grid.layout(2,2)))
print(g1_trace, vp=viewport(layout.pos.row=1, layout.pos.col=1))
print(g5_stackarea, vp=viewport(layout.pos.row=1, layout.pos.col=2))
print(g4_dot, vp=viewport(layout.pos.row=2, layout.pos.col=1:2))
pushViewport(viewport(layout=grid.layout(2,2)))
print(g1_trace, vp=viewport(layout.pos.row=1, layout.pos.col=1))
print(g5_stackarea, vp=viewport(layout.pos.row=1, layout.pos.col=2))
print(g4_dot, vp=viewport(layout.pos.row=2, layout.pos.col=1:2))
summary(myGapData)
g1_trace +
scale_x_continuous(limits=c(0,2.8e+06))+
scale_y_continuous(limits=c(0,5.9e+09))
g1_trace +
coord_cartesian(xlim=c(0,2.8e+06),ylim=c(0,5.9e+09))
g1_trace_inset <- g1_trace +
coord_cartesian(xlim=c(0,2.8e+06),ylim=c(0,5.9e+09)) +
guides(color=FALSE)
g <- ggplotGrob(g1_trace_inset)
g1_trace +
annotation_custom(grob=g,xmin=5e+08,xmax=11e+08, ymin=6e+12, ymax=12e+12) +
theme(legend.title=element_blank())
library(waffle)
library(ggmosaic)
myGapData <- gapminder %>%
mutate(TotalGDP = pop*gdpPercap) %>%
mutate(order_continent = factor(continent,
levels=c("Oceania", "Africa", "Europe", "Americas", "Asia")))
GDPsummaryDF <- myGapData %>%
group_by(continent, year) %>%
summarise(ContinentTotalGDP = sum(TotalGDP), ncountries = n())
GDPyearDF <- myGapData %>%
group_by(year) %>%
summarise(YearTotalGDP = sum(TotalGDP))
GDPcombo <- left_join(GDPsummaryDF, GDPyearDF, by="year")
GDPcombo <- GDPcombo %>% mutate(PropWorldGDP = ContinentTotalGDP / YearTotalGDP,
PctWorldGDP = 100*PropWorldGDP,
ContGDPBillions = ContinentTotalGDP/1000000000)
GDPcombo <- GDPcombo %>%
mutate(order_continent = factor(continent,
levels=c("Oceania", "Africa", "Europe", "Americas", "Asia")))
g1_trace <- ggplot(myGapData, aes(x=pop,y=TotalGDP,color=order_continent)) +
geom_line(aes(group=country)) +
theme_minimal() +
labs(x ="Population",
y="GDP")
g1_trace
grid.arrange(g1_trace, g2_scatter, g3_stackbar, g4_dot, g5_stackarea)
grid.arrange(g1_trace, g2_scatter, g3_stackbar, g4_dot, g5_stackarea) +
theme(legend.position = "none")
g1_trace <- ggplot(myGapData, aes(x=pop,y=TotalGDP,color=order_continent)) +
geom_line(aes(group=country)) +
theme_minimal() +
labs(x ="Population",
y="GDP")+
theme(legend.position = "none")
g2_scatter <- ggplot(myGapData, aes(x=pop,y=TotalGDP,color=order_continent)) +
geom_point() +
facet_wrap(~year) +
scale_x_log10(name="Population Size (Millions)",
breaks=1000000*c(1,10,100),
labels=c("1","10","100")) +
scale_y_log10(name="Gross Domestic Product (Billions)",
breaks=1000000000*c(1,100,1000),
labels=c("1000","10000","100000")) +
theme_minimal()+
theme(legend.position = "none")
g3_stackbar <- ggplot(GDPcombo, aes(x=year,y=ContinentTotalGDP,
fill=order_continent)) +
geom_bar(stat="identity") +
theme(legend.position = "top") +
theme_minimal()+
theme(legend.position = "none")
g4_dot <- myGapData %>%
filter(continent=="Asia") %>%
filter(year==2007) %>%
ggplot(aes(TotalGDP, fct_reorder(country,TotalGDP))) +
geom_point() +
theme(text = element_text(6),
axis.text.y = element_text(6)) +
scale_y_discrete(name=element_blank()) +
scale_x_continuous(name="Total GDP ($Trillion))",
breaks=1000000000000*c(5,10,15,20),
labels = c("5","10","15","20"))+
labs(title="Total GDP in each continent in 2007 in Asia",
caption="Data source: Jennifer Bryan (2015) Gapminder package") +
theme_minimal() +
theme(axis.text.y=element_text(size=9))+
theme(legend.position = "none")
g5_stackarea <- ggplot(GDPcombo, aes(x=year, y=ContinentTotalGDP, fill=order_continent)) +
geom_area() +
theme_minimal()+
theme(legend.position = "none")
grid.arrange(g1_trace, g2_scatter, g3_stackbar, g4_dot, g5_stackarea)
library(tidyverse)
myDiamonds <- diamonds %>%
mutate(Gcarat = cut(carat, breaks=seq(from=0,to=3.5,by=.25)))
ggplot(myDiamonds) +
geom_bar(aes(cut, fill = cut)) +
scale_fill_brewer(palette = "RdYlGn") +
labs(caption = "Data source: ggplot2 diamonds dataset") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(myDiamonds) +
geom_bar(aes(cut, fill = cut)) +
scale_fill_brewer(palette = "RdYlGn") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
labs(caption = "Data source: ggplot2 diamonds dataset") +
coord_flip()
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
labs(caption = "Data source: ggplot2 diamonds dataset") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(myDiamonds, aes(x=factor("1"), fill = cut)) +
geom_bar(position="fill", width=1, ) +
scale_fill_brewer(type="qual", palette="RdYlGn") +
coord_polar(theta="y") +
theme_minimal() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_blank(),
axis.ticks.y = element_blank(),
axis.text = element_blank()) +
ggtitle("Diamond Cut Qualities") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(caption = "Data source: ggplot2 diamonds dataset") +
facet_wrap(~Gcarat)
data = read.table("/Users/brianlambert/Desktop/STA363/musclemass.txt", header = T)
attach(data)
slrfit = lm(mass ~ age)
predict(slrfit,interval=c("confidence"),level=0.95)
credit_scores = c(545, 595, 640, 675, 705, 750)
interest_rates = c(18.982, 17.967, 12.218, 8.612, 6.680, 5.150)
plot(interest_rates ~ credit_scores, main = "Interest Rate vs Credit Score")
slrfit
slrfit(interest_rates ~ credit_scores)
slrfit = lm(interest_rates ~ credit_scores)
slrfit
summary(slrfit)
cor(interest_rates, credit_scores)
cor.test(interest_rates, credit_scores)
slrfit = lm(interest_rates ~ credit_scores)
slrfit
summary(slrfit)
setwd("~/Desktop/STA404")
