scale_colour_manual(name = 'country',
values =c('blue'='test', 'black'='black'), labels = c('c2','c1'))
ggplot(hw6_analysis, aes(x = inbound_tourists, y = expenditure)) +
geom_jitter(data = hw6_analysis[which(hw6_analysis$country == "UNITED STATES OF AMERICA"),],
aes(color = "blue"),
alpha = 0.6) +
geom_jitter(data = hw6_analysis[which(hw6_analysis$country != "UNITED STATES OF AMERICA"),],
aes(color = "black"),
alpha = 0.6) +
ggtitle("Inbound Tourism Expenditure by Inbound Tourists (1995-2014)") +
labs(x="Inbound Tourists (Thousands)", y="Inbound Tourist Expenditure in Millions (US Dollars)",
caption="Source: World Toursim Organization", size = 8) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_colour_manual(name = 'country',
values =c('test'='blue', 'black'='black'), labels = c('c2','c1'))
ggplot(hw6_analysis, aes(x = inbound_tourists, y = expenditure)) +
geom_jitter(data = hw6_analysis[which(hw6_analysis$country == "UNITED STATES OF AMERICA"),],
aes(color = "blue"),
alpha = 0.6) +
geom_jitter(data = hw6_analysis[which(hw6_analysis$country != "UNITED STATES OF AMERICA"),],
aes(color = "black"),
alpha = 0.6) +
ggtitle("Inbound Tourism Expenditure by Inbound Tourists (1995-2014)") +
labs(x="Inbound Tourists (Thousands)", y="Inbound Tourist Expenditure in Millions (US Dollars)",
caption="Source: World Toursim Organization", size = 8) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_colour_manual(name = 'country',
values =c('blue'='blue', 'black'='black'), labels = c('c2','c1'))
ggplot(hw6_analysis, aes(x = inbound_tourists, y = expenditure)) +
geom_jitter(data = hw6_analysis[which(hw6_analysis$country == "UNITED STATES OF AMERICA"),],
aes(color = "blue"),
alpha = 0.6) +
geom_jitter(data = hw6_analysis[which(hw6_analysis$country != "UNITED STATES OF AMERICA"),],
aes(color = "black"),
alpha = 0.6) +
ggtitle("Inbound Tourism Expenditure by Inbound Tourists (1995-2014)") +
labs(x="Inbound Tourists (Thousands)", y="Inbound Tourist Expenditure in Millions (US Dollars)",
caption="Source: World Toursim Organization", size = 8) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
scale_colour_manual(name = 'country',
values =c('blue'='blue', 'black'='black'), labels = c('rest of the world','United States'))
countries = unique(hw6_analysis$country)
View(countries)
countries = unique(hw6_analysis$country)
View(countries)
countries = as.character(unique(unlist(hw6_analysis$country)))
View(countries)
countries = distinct(hw6_analysis$country)
countries = unique(hw6_analysis$country)
head(countries)
countries = unique(hw6_analysis$country)
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
print("country: ", c, " --> ", min_year_tourists)
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
print(c)
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
print(min_year_tourists)
}
countries = unique(hw6_analysis$country)
countries = unique(hw6_analysis$country)
growth = rep(NA, length(countries))
i = 1
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth[i] = max_year_tourists - min_year_tourists
i = i + 1
}
for(g in growth) {
print(g)
}
countries = unique(hw6_analysis$country)
growth = vector("list", length(countries))
i = 1
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth[[i]] = max_year_tourists - min_year_tourists
i = i + 1
}
for(g in growth) {
print(g)
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(max_year_tourists - min_year_tourists)
i = i + 1
}
countries = unique(hw6_analysis$country)
growth = vector("list", length(countries))
i = 1
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(max_year_tourists)
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(class(max_year_tourists))
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(min_year_tourists)
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(min_year_tourists + 100)
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(min_year_tourists)
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(min_year_tourists + min_year_tourists)
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(min_year_tourists - min_year_tourists)
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(max_year_tourists - min_year_tourists)
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(country)
print(min_year)
print(max_year)
print("    ")
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(country)
print(min_year)
print(max_year)
print("    ")
break
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = min(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
print(country)
print(min_year)
print(max_year)
print("    ")
i = i + 1
}
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth[[i]] = max_year_tourists - min_year_tourists
i = i + 1
}
for(g in growth) {
print(g)
}
countries = unique(hw6_analysis$country)
i = 1
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth[[i]] = max_year_tourists - min_year_tourists
i = i + 1
}
for(g in growth) {
print(g)
}
countries = unique(hw6_analysis$country)
growth = vector("list")
i = 1
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth[[i]] = max_year_tourists - min_year_tourists
i = i + 1
}
for(g in growth) {
print(g)
}
countries = unique(hw6_analysis$country)
growth_vector = vector("list")
country_vector = vector("list")
i = 1
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth_vector[[i]] = max_year_tourists - min_year_tourists
country_vector[[i]] = c
i = i + 1
}
country_growth = cbind(country_vector, growth_vector)
View(country_growth)
class(country_growth)
sort(country_growth[, 'growth_vector'])
country_growth = cbind(country_vector, growth_vector)
country_growth[order(country_growth$growth_vector),]
class(country_growth$growth_vector)
country_growth = cbind(country_vector, growth_vector)
country_growth[order(country_growth[,1],df[,2],decreasing=TRUE),]
country_growth = cbind(country_vector, growth_vector)
country_growth[order(country_growth[,1],country_growth[,2],decreasing=TRUE),]
country_growth = cbind(country_vector, growth_vector)
country_growth = as.data.frame(country_growth)
country_growth[order(country_growth[,1], country_growth[,2], decreasing=TRUE),]
country_growth = cbind(country_vector, growth_vector)
print(class(country_growth))
country_growth = cbind(country_vector, growth_vector)
country_growth = country_growth[order(country_growth[,2], decreasing=TRUE),]
country_growth = cbind(country_vector, growth_vector)
country_growth = as.data.frame(country_growth)
country_growth = country_growth[order(country_growth[,2], decreasing=TRUE),]
country_growth = cbind(country_vector, growth_vector)
country_growth = as.data.frame(country_growth)
View(country_growth)
class(country_growth)
country_growth = cbind(country_vector, growth_vector)
country_growth = as.data.frame(country_growth)
class(country_growth)
country_growth = country_growth[order(country_growth$growth_vector, decreasing=TRUE),]
country_growth = cbind(country_vector, growth_vector)
country_growth = as.data.frame(country_growth)
class(country_growth$growth_vector)
country_growth = cbind(country_vector, growth_vector)
country_growth = as.data.frame(lapply(country_growth, unlist))
country_growth = country_growth[order(country_growth$growth_vector, decreasing=TRUE),]
class(country_growth$growth_vector)
View(country_growth)
country_growth = cbind(country_vector, growth_vector)
require(data.table)
country_growth = data.table(country_growth, key="V1")
View(country_growth)
country_growth = cbind(growth_vector, country_vector)
require(data.table)
country_growth = data.table(country_growth, key="V1")
View(country_growth)
country_growth = cbind(growth_vector, country_vector)
names(country_growth)
require(data.table)
country_growth = data.table(country_growth, key="V1")
View(country_growth)
countries = unique(hw6_analysis$country)
growth_vector = vector("list")
country_vector = vector("list")
i = 1
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth_vector[[i]] = max_year_tourists - min_year_tourists
country_vector[[i]] = c
i = i + 1
}
print(growth_vector)
print(growth_vector)
print(growth_vector)
unlist(growth_vector, use.names=FALSE)
View(growth_vector)
countries = unique(hw6_analysis$country)
growth_vector = vector("list")
country_vector = vector("list")
i = 1
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth_vector[[i]] = max_year_tourists - min_year_tourists
country_vector[[i]] = c
i = i + 1
}
print(growth_vector)
growth_vector = unlist(growth_vector, use.names=FALSE)
country_vector = unlist(country_vector, use.names=FALSE)
country_growth = cbind(growth_vector, country_vector)
require(data.table)
country_growth = data.table(country_growth, key="V1")
View(country_growth)
test = c()
test = append(test, 0)
test = c()
test = append(test, 0)
print(test)
countries = unique(hw6_analysis$country)
growth_vector = c()
country_vector = c()
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth_vector = append(growth_vector, max_year_tourists - min_year_tourists)
country_vector = append(country_vector, c)
}
countries = unique(hw6_analysis$country)
growth_vector = c()
country_vector = c()
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth_vector = append(growth_vector, max_year_tourists - min_year_tourists)
country_vector = append(country_vector, c)
}
country_growth = data.frame(growth_vector, country_vector)
country_growth = country_growth[order(growth_vector),]
View(country_growth)
country_growth = country_growth[order(growth_vector, decreasing = FALSE),]
View(country_growth)
countries = unique(hw6_analysis$country)
growth_vector = c()
country_vector = c()
for (c in countries) {
new_df = hw6_analysis[which(hw6_analysis$country == c),]
min_year = min(new_df$year)
min_year_tourists = new_df[which(new_df$year == min_year), 'inbound_tourists']
max_year = max(new_df$year)
max_year_tourists = new_df[which(new_df$year == max_year), 'inbound_tourists']
growth_vector = append(growth_vector, max_year_tourists - min_year_tourists)
country_vector = append(country_vector, c)
}
country_growth = data.frame(growth_vector, country_vector)
country_growth = country_growth[order(growth_vector),]
View(country_growth)
country_growth = data.frame(growth_vector, country_vector)
country_growth = country_growth[order(growth_vector),]
names(country_growth) = c("growth", "country")
ggplot(tail(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar()
ggplot(tail(country_growth, n = 5), aes(x = country, y = growth)) +
geom_bar()
class(head(country_growth))
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth)) +
geom_bar()
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth)) +
geom_bar(stat = "identity")
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar(stat = "identity")
country_growth$country <- factor(country_growth$country, levels = country_growth$country[order(-country_growth$growth)])
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar(stat = "identity")
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar(stat = "identity", binwidth = 3)
country_growth$country <- factor(country_growth$country, levels = country_growth$country[order(-country_growth$growth)])
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar(stat = "identity", width = 3)
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar(stat = "identity") +
ggtitle("Countries with Greatest Increase in Tourism between 1995-2014") +
labs(x="Country", y="Increase in Tourists (Thousands)",
caption="Source: World Toursim Organization", size = 8) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
country_growth$country <- factor(country_growth$country, levels = country_growth$country[order(-country_growth$growth)])
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar(stat = "identity") +
ggtitle("Countries with Greatest Increase in Tourism between 1995-2014") +
labs(x="Country", y="Increase in Tourists (Thousands)",
caption="Source: World Toursim Organization", size = 8) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(data = tail(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar(stat = "identity") +
ggtitle("Countries with Greatest Increase in Tourism between 1995-2014") +
labs(x="Country", y="Increase in Tourists (Thousands)",
caption="Source: World Toursim Organization", size = 8) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = "none")
ggplot(data = head(country_growth, n = 5), aes(x = country, y = growth, fill = country)) +
geom_bar(stat = "identity") +
ggtitle("Countries with Greatest Decrease in Tourism between 1995-2014") +
labs(x="Country", y="Decrease in Tourists (Thousands)",
caption="Source: World Toursim Organization", size = 8) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.position = "none")
head(hw6_analysis)
tail(hw6_analysis)
ggplot(hw6_analysis, aes(x = inbound_tourists, y = expenditure)) +
geom_jitter(data = hw6_analysis[which(hw6_analysis$country == "UNITED STATES OF AMERICA"),],
aes(color = "blue"),
alpha = 0.6) +
geom_jitter(data = hw6_analysis[which(hw6_analysis$country != "UNITED STATES OF AMERICA"),],
aes(color = "black"),
alpha = 0.6) +
ggtitle("Inbound Tourism Expenditure by Inbound Tourists (1995-2014)") +
labs(x="Inbound Tourists (Thousands)", y="Inbound Tourist Expenditure in Millions (US Dollars)",
caption="Source: World Toursim Organization", size = 8) +
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) +
# source: https://groups.google.com/forum/#!topic/ggplot2/GD2kZuOQS1Q
scale_colour_manual(name = 'country',
values =c('blue'='blue', 'black'='black'), labels = c('rest of the world','United States'))
